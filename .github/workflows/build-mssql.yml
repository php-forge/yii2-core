on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'
      - 'infection.json.dist'
      - 'psalm.xml'

  push:
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'
      - 'infection.json.dist'
      - 'psalm.xml'

name: build-mssql

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: PHP ${{ matrix.php }}-mssql-${{ matrix.mssql }}

    env:
      EXTENSIONS: pdo, pdo_sqlsrv

    runs-on: ubuntu-latest

    strategy:
        matrix:
            os:
              - ubuntu-latest

            php:
              - 8.1
              - 8.2
              - 8.3

            mssql:
              - server:2019-latest
              - server:2022-latest

    services:
      mssql:
          image: mcr.microsoft.com/mssql/${{ matrix.mssql }}
          env:
              SA_PASSWORD: Password12!
              ACCEPT_EULA: Y
              MSSQL_PID: Developer
          ports:
              - 1433:1433
          options: --name=mssql --health-cmd="/opt/mssql-tools18/bin/sqlcmd -C -S localhost -U SA -P 'Password12!' -Q 'SELECT 1'" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create MS SQL Database.
        run: docker exec -i mssql /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U SA -P 'Password12!' -Q 'CREATE DATABASE yiitest'

      - name: Install PHP with extensions.
        uses: shivammathur/setup-php@v2
        with:
          coverage: pcov
          extensions: ${{ env.EXTENSIONS }}
          ini-values: date.timezone='UTC'
          php-version: ${{ matrix.php }}
          tools: composer:v2, pecl

      - name: Update composer.
        run: composer self-update

      - name: Install dependencies with composer.
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

      - name: Run MSSQL tests with PHPUnit and generate coverage.
        if: matrix.php == '8.1'
        run: vendor/bin/phpunit --group mssql --coverage-clover=coverage.xml --colors=always --verbose

      - name: Run MSSQL tests with PHPUnit.
        if: matrix.php != '8.1'
        run: vendor/bin/phpunit --group mssql --colors=always --verbose

      - name: Upload coverage to Codecov.
        if: matrix.php == '8.1'
        uses: codecov/codecov-action@v4
        with:
          disable_file_fixes: true
          file: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
