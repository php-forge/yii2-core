build: false

version: dev-{build}

platform:
  - x64

image:
  - Visual Studio 2015

clone_folder: C:\projects\yii2

environment:
  matrix:
    - php: 8.1

cache:
  - '%APPDATA%\Composer'
  - '%LOCALAPPDATA%\Composer'
  - C:\tools\php -> .appveyor.yml
  - C:\tools\composer.phar -> .appveyor.yml

init:
  - SET PATH=C:\tools\php;%PATH%

install:
  # Upgrade to 0.10.16-beta to benefit from a bugfix for
  # https://github.com/chocolatey/choco/issues/1843
  - ps: choco upgrade chocolatey --pre
  - ps: |
      # Check if installation is cached
      if (!(Test-Path c:\tools\php)) {
        appveyor-retry choco install --params '""/InstallDir:C:\tools\php""' --ignore-checksums -y php --version ((choco search php --exact --all-versions -r | select-string -pattern $env:php | sort { [version]($_ -split '\|' | select -last 1) } -Descending | Select-Object -first 1) -replace '[php|]','')
        # Set PHP environment items that are always needed
        Add-Content php.ini "`n date.timezone=UTC"
        Add-Content php.ini "`n extension_dir=ext"
        Add-Content php.ini "`n memory_limit=1G"
        Add-Content php.ini "`n extension=php_openssl.dll"
        Add-Content php.ini "`n extension=php_mbstring.dll"
        Add-Content php.ini "`n extension=php_fileinfo.dll"
        Add-Content php.ini "`n extension=php_gd.dll"
        Add-Content php.ini "`n extension=php_curl.dll"

        $DLLVersion = "5.10.0"
        cd c:\tools\php\ext
        $source = "https://windows.php.net/downloads/pecl/releases/sqlsrv/$($DLLVersion)/php_sqlsrv-$($DLLVersion)-$($env:php)-nts-vs16-x64.zip"
        $destination = "c:\tools\php\ext\php_sqlsrv-$($DLLVersion)-$($env:php)-nts-vs16-x64.zip"
        Invoke-WebRequest $source -OutFile $destination
        7z x -y php_sqlsrv-$($DLLVersion)-$($env:php)-nts-vs16-x64.zip > $null
        $source = "https://windows.php.net/downloads/pecl/releases/pdo_sqlsrv/$($DLLVersion)/php_pdo_sqlsrv-$($DLLVersion)-$($env:php)-nts-vs16-x64.zip"
        $destination = "c:\tools\php\ext\php_pdo_sqlsrv-$($DLLVersion)-$($env:php)-nts-vs16-x64.zip"
        Invoke-WebRequest $source -OutFile $destination
        7z x -y php_pdo_sqlsrv-$($DLLVersion)-$($env:php)-nts-vs16-x64.zip > $null
        $DLLVersion = (Invoke-WebRequest "https://pecl.php.net/rest/r/pcov/stable.txt").Content
        Invoke-WebRequest https://windows.php.net/downloads/pecl/releases/pcov/$($DLLVersion)/php_pcov-$($DLLVersion)-$($env:php)-nts-vs16-$($env:platform).zip -OutFile pcov.zip
        7z x -y pcov.zip > $null
        Remove-Item c:\tools\php\* -include .zip
        cd c:\tools\php
        Add-Content php.ini "`nextension=php_sqlsrv.dll"
        Add-Content php.ini "`nextension=php_pdo_sqlsrv.dll"
        Add-Content php.ini "`nextension=php_pcov.dll"
        Add-Content php.ini "`n"
      }
  - IF NOT EXIST C:\tools\composer.phar (cd C:\tools && appveyor DownloadFile https://getcomposer.org/download/2.7.7/composer.phar)

before_test:
  - ps: Get-Service | Where-Object { $_.DisplayName -like 'SQL Server*' }

  # setup SQL Server 2008
  - ps: |
      Start-Service "MSSQL`$SQL2008R2SP2"
      Start-Service "SQLBrowser"
  - sqlcmd -S "(local)\%SQLINSTANCE%" -Q "Use [master]; CREATE DATABASE yiitest;"
  - sqlcmd -S "(local)\%SQLINSTANCE%" -h -1 -Q "set nocount on; Select @@version"
  - cd C:\projects\yii2
  - php C:\tools\composer.phar self-update
  - php C:\tools\composer.phar update --no-interaction --no-progress --prefer-stable --no-ansi

test_script:
  - cd C:\projects\yii2
  - vendor\bin\phpunit --group mssql
